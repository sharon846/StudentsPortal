<?php

function log_data($dir, $mail)
{
    require_once 'SITE_PATH/site_manager/pdoconfig.php';
    $conn = @new mysqli($host, $username, $password, $dbname);
    
    $sql = "UPDATE `Tusers` SET `last_dir`='$dir' WHERE `email`='$mail'"; 
    $conn->query($sql);
    $conn->close();
}


// TITLE OF PAGE
$title = "List of Files";
	
// STYLING (light or dark)
$color	= "light";

// ADD SPECIFIC FILES YOU WANT TO IGNORE HERE
$ignore_file_list = array('.htaccess','.htaccess-con','index.php', 'trash', 'word');
	
// SORT BY
$sort_by = "name_asc"; // options: name_asc, name_desc, date_asc, date_desc
	
// ICON URL
$icon_url = file_get_contents("http://SITE_DOMAIN/site_manager/icons");
	
// FORCE DOWNLOAD ATTRIBUTE
$force_download = false;

$server_root = 'SITE_PATH/';
$curr_dir = getcwd();
$representive_dir = str_replace($server_root, "", $curr_dir);
$representive_url = $_SERVER['REQUEST_SCHEME'].'://SITE_DOMAIN/'.$representive_dir;
$base_url = $_SERVER['REQUEST_SCHEME'].'://SITE_DOMAIN';

@set_time_limit(3600);
session_name("SITE_SESSION_NAME");
session_start();

if (!isset($_SESSION["SITE_SESSION_NAME"])){
    header("Location: http://SITE_DOMAIN/login/index.php?referer=$representive_url/");
    exit();
}

log_data($representive_dir, $_SESSION['SESSION_NAME']["mail"]);

?>

<!DOCTYPE html>
<html>
<head>
	<title><?php echo $title; ?></title>
	<meta charset="utf-8">
	<meta name="viewport" content="width=device-width,height=device-height,initial-scale=1.0,maximum-scale=1.0, viewport-fit=cover">
	<script src="//ajax.googleapis.com/ajax/libs/jquery/1.7.0/jquery.min.js"></script>
	<link rel="stylesheet" href="http://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">
	<link href="//fonts.googleapis.com/css?family=Lato:400,900" rel="stylesheet" type="text/css" />
	<script src="http://www.myersdaily.org/joseph/javascript/md5.js"></script>
    
	<style>
		*, *:before, *:after { -moz-box-sizing: border-box; -webkit-box-sizing: border-box; box-sizing: border-box; }
		body { background: #dadada; font-family: "Lato", "HelveticaNeue-Light", "Helvetica Neue Light", "Helvetica Neue", Helvetica, Arial, "Lucida Grande", sans-serif; font-weight: 400; font-size: 14px; line-height: 18px; padding: 0; margin: 0; text-align: center;}
		.wrap { max-width: 100%; width: 500px; margin: 20px auto; background: white; padding: 40px; border-radius: 3px; text-align: left; margin-top: 9em}
		@media only screen and (max-width: 700px) { .wrap { padding: 15px; } }
		h1 { text-align: center; margin: 40px 0; font-size: 22px; font-weight: bold; color: #666; }
		a { color: #399ae5; text-decoration: none; } a:hover { color: #206ba4; text-decoration: none; }
		.note { padding:  0 5px 25px 0; font-size:80%; color: #666; line-height: 18px; }
		.block { clear: both; min-height: 50px; border-top: solid 1px #ECE9E9; }
		.block:first-child { border: none; }
		.block .img { width: 50px; height: 50px; display: block; float: left; margin-right: 10px; background: transparent url(<?php echo $icon_url; ?>) no-repeat 0 0; }
		.block .file { padding-bottom: 5px; }
		.block .data { line-height: 1.3em; color: #666; }
		.block a { display: block; padding: 20px; transition: all 0.35s; }
		.block a:hover, .block a.open { text-decoration: none; background: #efefef; }
		
		.bold { font-weight: 900; }
		.upper { text-transform: uppercase; }
		.fs-1 { font-size: 1em; } .fs-1-1 { font-size: 1.1em; } .fs-1-2 { font-size: 1.2em; } .fs-1-3 { font-size: 1.3em; } .fs-0-9 { font-size: 0.9em; } .fs-0-8 { font-size: 0.8em; } .fs-0-7 { font-size: 0.7em; }
		
		.jpg, .jpeg, .gif, .png { background-position: -50px 0 !important; } 
		.pdf { background-position: -100px 0 !important; }  
		.txt, .rtf { background-position: -150px 0 !important; }
		.xls, .xlsx { background-position: -200px 0 !important; } 
		.ppt, .pptx { background-position: -250px 0 !important; } 
		.doc, .docx { background-position: -300px 0 !important; }
		.zip, .rar, .tar, .gzip { background-position: -350px 0 !important; }
		.swf { background-position: -400px 0 !important; } 
		.fla { background-position: -450px 0 !important; }
		.mp3 { background-position: -500px 0 !important; }
		.wav { background-position: -550px 0 !important; }
		.mp4 { background-position: -600px 0 !important; }
		.mov, .aiff, .m2v, .avi, .pict, .qif { background-position: -650px 0 !important; }
		.wmv, .avi, .mpg { background-position: -700px 0 !important; }
		.flv, .f2v { background-position: -750px 0 !important; }
		.psd { background-position: -800px 0 !important; }
		.ai { background-position: -850px 0 !important; }
		.html, .xhtml, .dhtml, .php, .asp, .css, .js, .inc { background-position: -900px 0 !important; }
		.dir { background-position: -950px 0 !important; }
		
		.sub { margin-left: 20px; border-left: solid 5px #ECE9E9; display: none; }
		
		a.directory{ color: white;left:0px;font-family: Arial;font-size: 13px;top: 33%;float: left;}
		
		.cover-panel {
            position:fixed;
            width:100%;
            left:0;right:0;top:0;bottom:0;
            background-color: rgba(0,0,0,0.7);
            z-index:9999;
            display:none;
        }
        
        @-webkit-keyframes spin {
        	from {-webkit-transform:rotate(0deg);}
        	to {-webkit-transform:rotate(360deg);}
        }
        
        @keyframes spin {
        	from {transform:rotate(0deg);}
        	to {transform:rotate(360deg);}
        }
        
        .cover-spin::after {
            content:'';
            display:block;
            position:absolute;
            left:48%;top:40%;
            width:40px;height:40px;
            border-style:solid;
            border-color:black;
            border-top-color:transparent;
            border-width: 4px;
            border-radius:50%;
            -webkit-animation: spin .8s linear infinite;
            animation: spin .8s linear infinite;
        }
        
        #snackbar {
          visibility: hidden;
          min-width: 250px;
          margin-left: -125px;
          background-color: #333;
          color: #fff;
          text-align: center;
          border-radius: 2px;
          padding: 16px;
          position: fixed;
          z-index: 1;
          left: 50%;
          bottom: 30px;
          font-size: 17px;
        }
        
        #snackbar.show {
          visibility: visible;
          -webkit-animation: fadein 0.5s, fadeout 0.5s 4.5s;
          animation: fadein 0.5s, fadeout 0.5s 4.5s;
        }
        
        @-webkit-keyframes fadein {
          from {bottom: 0; opacity: 0;} 
          to {bottom: 30px; opacity: 1;}
        }
        
        @keyframes fadein {
          from {bottom: 0; opacity: 0;}
          to {bottom: 30px; opacity: 1;}
        }
        
        @-webkit-keyframes fadeout {
          from {bottom: 30px; opacity: 1;} 
          to {bottom: 0; opacity: 0;}
        }
        
        @keyframes fadeout {
          from {bottom: 30px; opacity: 1;}
          to {bottom: 0; opacity: 0;}
        }
		
		body.dark { background: #1d1c1c; color: #fff; }
		body.dark h1 { color: #fff; }
		body.dark .wrap { background: #2b2a2a; }
		body.dark .block { border-top: solid 1px #666; }
		body.dark .block a:hover, body.dark .block a.open { background: #000; }
		body.dark .note { color: #fff; }
		body.dark .block .data { color: #fff; }
		body.dark .sub { border-left: solid 5px #0e0e0e; }
		
		a.hover:hover { color: rgb(203,213,225); }
		a.hover { color:white; }
		.transform { --tw-translate-x: -0.05rem; --tw-translate-y: -0.5rem; --tw-rotate: 0; --tw-skew-x: 0; --tw-skew-y: 0; --tw-scale-x: 1; --tw-scale-y: 1; transform: translateX(var(--tw-translate-x)) translateY(var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));}
		
		header { background-color: rgb(2,132,199); }
		form { background-color: rgba(3,105,161); }
		#lamp { color: rgb(251,191,36); }
		hr { border-color: rgb(14,165,233); }
		
		body.dark header { background-color: rgb(109,40,217); }
		body.dark .transform{ --tw-translate-y: 1.2rem; }
		body.dark form { background-color: rgb(91,33,182); }
		body.dark hr { border-color: rgb(124,58,237); }
		body.dark #lamp { color: rgb(71,85,105); }
        
        
        ::placeholder { color: black;}
	</style>
</head>
<body oncontextmenu="return false;" class="<?php echo $color; ?>">
<div hidden id="load" class="cover-panel cover-spin"></div>
<header id="header" style="height: 100px; position: absolute; width: 100%; top: 0%;">
    <div style="width: 100%; height: 100%">
        <div style="width: 100%; height: 62%; top: 0%; position: absolute;">
            <a class="hover" href="http://SITE_DOMAIN/site/uploads" title="Directory Lister" style="position: absolute; top: 15%; left: 4%; width: 50px; height:30px;">
                <img width="100%" src="http://SITE_DOMAIN/img/upload.png"/>
            </a>
        
            <form onsubmit="return false" style="border-radius: 9999px; width: 64%;left: 20%;position: absolute;height: 59%; top: 23%;">
                <input class="search" type="text" value="" name="search" placeholder="Search..." style="color: white; outline: none; background-color: transparent; border: 0 solid #341c70; position: absolute; width: 85%; height: 60%; top: 24%; left: 9%; font-size: 15px;"> 
                <i class="fa-search fa" style="left: 2.5%; position: absolute; top: 28%; color: rgb(53,28,112); font-size: 16px;"></i>
            </form>
            
            <div id="mode" style=" width: 1rem; height: 2rem; cursor: pointer; position: absolute; right: 5%; top: 30%; border-radius: 9999px; background-color: rgba(15,23,42,0.3);">
               <div class="transform" style="transition-property: all;transition-duration: .3s;transition-timing-function: cubic-bezier(.4,0,.2,1);background-color: white;border-radius: 9999px;width: 1.25rem; height: 1.25rem;margin-left: -0.08rem;">
                    <i id="lamp" class="fa fa-lightbulb-o" style="font-size: .75em;"></i>
                </div>
            </div>
        </div>
        <hr style="top: 57%;position: absolute; width: 100%;">
        <div style="width: 100%;height: 31%;top: 66%;position: absolute;">
            <div style="position: absolute; width: 84%; height: 60%; top:30%; left:5%; overflow-x: auto;">
                <?php
                if (isset($representive_dir))
                {
                    $paths = explode('/', $representive_dir);
                    $paths = array_filter($paths);
                    $paths = array_values($paths);
    
                    $total_path = "";
                    foreach ($paths as $path) {
                        $total_path = "$total_path$path/";
                        echo "<a class='directory' href='/$total_path'>$path / </a>";
    		        }
                }
            ?>
            </div>
            <div style="cursor: pointer;position: absolute;right: 4.8%;height: 60%;color: white;top: 25%;">
               <a onclick='copy_link()' class="dl hover" title="Download this Directory" style="font-size: 1.1rem; line-height: 1.25rem;">
                 <i class="fa fa-copy fa-lg"></i>
                </a>
            </div>
        </div>
    </div>
</header>

<div class="wrap">
<div id="regular-data">
<?php


function ext($filename) 
{
	return pathinfo($filename, PATHINFO_EXTENSION);
}

function display_size($bytes, $precision = 2) 
{
	$units = array('B', 'KB', 'MB', 'GB', 'TB');
    $bytes = max($bytes, 0); 
    $pow = floor(($bytes ? log($bytes) : 0) / log(1024)); 
    $pow = min($pow, count($units) - 1); 
    $bytes /= (1 << (10 * $pow)); 
	return round($bytes, $precision) . '<span class="fs-0-8 bold">' . $units[$pow] . "</span>";
}


// SHOW THE MEDIA BLOCK
function display_block($file, $url)
{
	global $ignore_file_list, $force_download, $curr_dir;

	$basename = @end(explode('/', $file));

	$file_ext = ext($file);
	if( !$file_ext AND is_dir($file)) $file_ext = "dir";
	if(in_array($file, $ignore_file_list)) return;
	
	$download_att = ($force_download AND $file_ext != "dir" ) ? " download='" . $basename . "'" : "";

    $url = str_replace($curr_dir, "", $url);
	if ($file_ext === "dir")  $url .= '/';
	
	$rtn = "<div class=\"block\">";
	$rtn .= "<a href=\"$url\" ";
	if ($file_ext !== "dir") $rtn .= "target='_blank' ";
	$rtn .= "class=\"$file_ext\"{$download_att}>";
	$rtn .= "	<div class=\"img $file_ext\"></div>";
	$rtn .= "	<div class=\"name\">";
	
	if ($file_ext === "dir") 
	{
		$rtn .= "		<div class=\"file fs-1-2 bold\">" . $basename . "</div>";
		$rtn .= "		<div class=\"data upper size fs-0-7\"><span class=\"bold\">DIRECTORY</span> files</div>";
		$rtn .= "		<div class=\"data upper size fs-0-7\"><span class=\"bold\">Size:</span>DIRECTORY</div>";
		
	}
	else
	{
		$rtn .= "		<div class=\"file fs-1-2 bold\">" . $basename . "</div>";
		$rtn .= "		<div class=\"data upper size fs-0-7\"><span class=\"bold\">Size:</span> " . display_size(filesize($file)) . "</div>";
		$rtn .= "		<div class=\"data upper modified fs-0-7\"><span class=\"bold\">Last modified:</span> " .  date("D. F jS, Y - h:ia", filemtime($file)) . "</div>";	
	}

	$rtn .= "	</div>";
	$rtn .= "	</a>";
	$rtn .= "</div>";
	return $rtn;
}


// RECURSIVE FUNCTION TO BUILD THE BLOCKS
function build_blocks($folder, $url)
{
	global $ignore_file_list, $sort_by;
	
	$objects = array();
	$objects['directories'] = array();
	$objects['files'] = array();
	
	$items = scandir($folder);
	array_shift($items);
	array_shift($items);
	
	foreach($items as $c => $item)
	{
		// IGNORE FILE
		if(in_array($item, $ignore_file_list)) { continue; }
	
		if( $folder && $item )
		{
			$item = "$folder/$item";
		}

		$file_ext = ext($item);
		
		// DIRECTORIES
		if( is_dir($item) ) 
		{
			$objects['directories'][] = $item; 
			continue;
		}
		
		// FILE DATE
		$file_time = date("U", filemtime($item));
		
		// FILES
		if( $item )
		{
			$objects['files'][$file_time . "-" . $item] = $item;
		}
	}
	
	foreach($objects['directories'] as $c => $file)
	{
		$sub_items = (array) scandir( $file );
		
		$has_sub_items = false;
		foreach( $sub_items as $sub_item )
		{
			$sub_fileExt = ext( $sub_item );
			if( $sub_item == ".." OR $sub_item == ".") continue;
			if(in_array($sub_item, $ignore_file_list)) continue;
			
			$has_sub_items = true;
			break;	
		}
		
		$file = str_replace('//', '/', $file);
		if( $has_sub_items ) echo display_block($file, "$url$file");
	}
	
	// SORT BEFORE LOOP
	if( $sort_by == "date_asc" ) { ksort($objects['files']); }
	elseif( $sort_by == "date_desc" ) { krsort($objects['files']); }
	elseif( $sort_by == "name_asc" ) { natsort($objects['files']); }
	elseif( $sort_by == "name_desc" ) { arsort($objects['files']); }
	
	foreach($objects['files'] as $t => $file)
	{
		$fileExt = ext($file);
		if(in_array($file, $ignore_file_list)) { continue; }
        
        $file = str_replace('//', '/', $file);
		echo display_block($file, "$url$file");
	}
}

// http://SITE_DOMAIN/site/cs

build_blocks($curr_dir, $representive_url);

?>

</div>
<div hidden id="search-data">
</div>
</div>
<div id="snackbar">Some text some message..</div>
  
<script>

    $( document ).ready(function() {
        
    	if (window.matchMedia && window.matchMedia('(prefers-color-scheme: dark)').matches)
    		    switchMode();
        
        $("div#mode").click(switchMode);
        $("input.search").keyup(search);
	});
    
    function search(event){
        
        if ($(this).val() == ""){
            $("div#search-data").hide();
            $("div#regular-data").show();
        }
        
        
        if (event.keyCode == 13){

            $("div#load").show();
            
            $.ajax({url: "../data/scripts/search.php", type: "POST", data: {pattern: $(this).val(), <?php echo "root: '$server_root', url: '$base_url', total_path: '$total_path'"; ?>}, success: function(result){
                
                    $("div#load").hide();
    
                    result = JSON.parse(result);
                    
                    
                    if (result['error'] == 1){
                        
                        $("div#snackbar").text(result['data']);
                        $("div#snackbar").attr('class', 'show');
                        setTimeout(function(){ $("div#snackbar").removeClass('show'); }, 5000);
                    }
                    else{
                        
                        $("div#search-data").html("");
                        $("div#regular-data").hide();
                        
                        result['data'].forEach(obj => buildSearchResultObject(obj[2], obj[0], obj[1]));
    
                        $("div#search-data").show();
    
                    }
                }
            });
        }
    }
    
    function buildSearchResultObject(url, filesize, filetime){
    
        var basename = url.split('/').pop();
        var file_ext = basename.split('.').pop();
        
        var download_att = <?php echo $GLOBALS['force_download'] ? "'". "download='basename'"."'" : "''"; ?>;
        download_att.replace('basename', basename);
        
        var data = "<div class='block'><a href='"+url+"' target='_blank' class='"+file_ext+"'{"+download_att+"}>"+
        "<div class='img "+file_ext+"'></div><div class='name'>"+
        "<div class='file fs-1-2 bold'>"+basename+"</div><div class='data upper size fs-0-7'><span class='bold'>Size:</span>"+filesize+"</div>" + 
        "<div class='data upper modified fs-0-7'><span class='bold'>Last modified:</span>"+filetime+"</div></div></a></div>";
        
        $("div#search-data").html($("div#search-data").html()+data);
    
    }
	
	document.onkeydown = function(e) {
    if(event.keyCode == 123) {
    return false;
    }
    if(e.ctrlKey && e.shiftKey && e.keyCode == 'I'.charCodeAt(0)){
    return false;
    }
    if(e.ctrlKey && e.shiftKey && e.keyCode == 'J'.charCodeAt(0)){
    return false;
    }
    if(e.ctrlKey && e.keyCode == 'U'.charCodeAt(0)){
    return false;
    }
    }

    function copy_link(){
        
        navigator.clipboard.writeText(decodeURIComponent(window.location.href))
        .then(() => {
          window.alert("url copied!");
        })
        .catch((error) => {
          console.error("Unable to copy text to clipboard: ", error);
        });
    }
	
	function switchMode()
	{
	    if ($("body").hasClass("dark")){
	        $("body").attr('class', 'light');
	    }
	    
	    else{
	        $("body").attr('class', 'dark');
	    }
	}
    	
    window.matchMedia('(prefers-color-scheme: dark)').addEventListener('change', event => { 
    	
        if (event.matches)
    	   switchMode();
    });

</script>

</body>
</html>


